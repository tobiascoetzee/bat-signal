service: bat-signal

provider:
  name: aws
  runtime: nodejs8.10
  region: ca-central-1
  environment:
    VILLAINS_DYNAMODB_TABLE: dc-villains
    BAT_SIGNAL_DYNAMODB_TABLE: bat-signal-alerts
    ALERT_REQUEST_TOPIC: bat-signal-alert-request
    ALERT_READY_TOPIC: bat-signal-alert-ready
    BATMAN_PHONE_NO: 15551112222
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: [
        "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VILLAINS_DYNAMODB_TABLE}",
        "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BAT_SIGNAL_DYNAMODB_TABLE}"
      ]
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: [
        { "Fn::Join" : ["", ["arn:aws:sns:${opt:region, self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:provider.environment.ALERT_REQUEST_TOPIC}" ] ]  },
        { "Fn::Join" : ["", ["arn:aws:sns:${opt:region, self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:provider.environment.ALERT_READY_TOPIC}" ] ]  }
      ]

package:
  individually: true
  exclude: 
    - handler.js
    - package.json
    - functions/**

functions:
  villainsGet:
    name: bat-signal-get-villains
    handler: functions/villains/villainsGet.handler
    events:
      - http:
          path: villains
          method: get
          integration: lambda
          cors: true
    package:
      include:
        - functions/villains/villainsGet.js

  villainGet:
    name: bat-signal-get-villain
    handler: functions/villains/villainGet.handler
    events:
      - http:
          path: villains/{name}
          method: get
          integration: lambda
          cors: true
          request:
            parameters:
              paths:
                name: true
    package:
      include:
        - functions/villains/villainGet.js

  villainsPut:
    name: bat-signal-put-villain
    handler: functions/villains/villainPut.handler
    events:
      - http:
          path: villains
          method: post
          integration: lambda
          cors: true      
    package:
      include:
        - functions/villains/villainPut.js

  villainDelete:
    name: bat-signal-delete-villain
    handler: functions/villains/villainDelete.handler
    events:
      - http:
          path: villains/{name}
          method: delete
          integration: lambda
          cors: true
          request:
            parameters:
              paths:
                name: true
    package:
      include:
        - functions/villains/villainDelete.js

  alertReceived:
    name: bat-signal-alert-received
    handler: functions/bat-signal/alertReceived.handler
    environment:
      snsArn: { "Fn::Join" : ["", ["arn:aws:sns:${opt:region, self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:provider.environment.ALERT_REQUEST_TOPIC}" ] ]  }
    events:
      - http:
          path: /alerts
          method: post
          integration: lambda
          cors: true      
    package:
      include:
        - functions/bat-signal/alertReceived.js

  notifyUser:
    name: bat-signal-notify-user
    handler: functions/bat-signal/notifyUser.handler
    events:
      - sns: ${self:provider.environment.ALERT_REQUEST_TOPIC} 
    package:
      include:
        - functions/bat-signal/notifyUser.js

  logAlert:
    name: bat-signal-log-alert
    handler: functions/bat-signal/logAlert.handler
    environment:
      snsArn: { "Fn::Join" : ["", ["arn:aws:sns:${opt:region, self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:provider.environment.ALERT_READY_TOPIC}" ] ]  }
    events:
      - sns: ${self:provider.environment.ALERT_REQUEST_TOPIC} 
    package:
      include:
        - functions/bat-signal/logAlert.js

  signalBatman:
    name: bat-signal-signal-batman
    handler: functions/bat-signal/signalBatman.handler
    environment:
      batmanPhoneNumber: ${self:provider.environment.BATMAN_PHONE_NO}
    events:
      - sns: ${self:provider.environment.ALERT_READY_TOPIC} 
    package:
      include:
        - functions/bat-signal/signalBatman.js

resources:
  Resources:
    DCVillainsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.VILLAINS_DYNAMODB_TABLE}    
    BatSignalDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: referenceId
            AttributeType: S
        KeySchema:
          -
            AttributeName: referenceId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.BAT_SIGNAL_DYNAMODB_TABLE}   
    BatSignalCognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: BatSignal
    BatSignalCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: villains.bat-signal
        GenerateSecret: false
        UserPoolId:
          Ref: "BatSignalCognitoUserPool"